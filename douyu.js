var vdwdae325w_64we = "220120201228"; var r2a1ff2bb06e2979fb2a10 = [0xcc5e374a, 0x32c84c86, 0x7dfa2d99, 0x200dcbdf, 0x72e3aaa6, 0x5c5d697c, 0x520b8f4, 0x58a94fa8, 0x672b3cd4, 0xe13273b9, 0x371ef97a, 0xc275811, 0xade40c7e, 0x56d7e7c3, 0x56ce232b, 0xc0ebea10, 0x5391dcb3, 0xe5e87f52, 0x7e1650a, 0x52499ad6, 0x21b000d4, 0x551ae8d9, 0x6fcb334a, 0x92d51487, 0x65543923, 0xfe22100, 0x20d9ceac, 0x8ad30280, 0x1a2acf84, 0x2feee5c7, 0xe5222a33, 0x20ddfd30, 0x46d1cbf5, 0xa3a85cc0, 0xe1d80346, 0x627dee, 0xa50b7eec, 0x25eead38, 0x8837b289, 0x5ae9cc37, 0xbfb8c59a, 0xe4821e57, 0x2b945f36, 0x3a027bbd, 0xeddc9841, 0x404c51b1, 0xf0bed603, 0xe53571d0, 0xea422e3b, 0xe84fa3d5, 0xfaedaf24, 0xbb9fcf50, 0x99087807, 0x464b4d34, 0x152fbc48, 0xeb9cedb2, 0x3afa68a0, 0x2e293f52, 0xd2123627, 0xcd018f74, 0xf266d47b, 0xc43c309e, 0x95b8d4de, 0x7174c8de, 0x72d79b29, 0x2aa0ea56, 0xe00a320a, 0xb646745f, 0xab878be5, 0xc7de5c15, 0xbfa9e8ff, 0xd19b7764, 0xfecb1014, 0x972f42a3, 0xbb9d3741, 0x5ea2b2c, 0x77b428ae, 0xef31c040, 0x142311cf, 0x4a6bf4c7, 0xbc8af0d, 0x1900c5d6, 0x195f3b1b, 0xa6502934, 0x727bc7a4, 0x4cb45ec1, 0x837dd3d7, 0x9b8ae471, 0x668351db, 0x99b295d3, 0x1d5674f9, 0xf7971878, 0x68c38f11, 0xd167aae5, 0x4b6afd87, 0xdc2ea88, 0xc1922f6b, 0xb9359444, 0x2f83e6d3, 0x474cd03d, 0xec5e0d2b, 0xd5677d64, 0x64d9b927, 0x862ad60, 0x1e7e1e22, 0xd7ea8b86, 0x7b91814a, 0xb0daa933, 0x5773d187, 0xed3784f2, 0xe8c33b5b, 0x5964f710, 0x4a794cac, 0x9df55aad, 0x5d9bc4a9, 0xbdce466d, 0xb5a8be86, 0xea8484f7, 0x285b36d4, 0xec2dcec8, 0x41e00f70, 0x57a02ea9]; var r2a1ff2bb06e2979fb2a11 = [0x5c8bd4cf, 0x5a8157c2, 0xef0764e4, 0xd814f23b, 0x15e7fefa, 0x7dd35ce3, 0x757de30f, 0x5d421c1, 0x1ac112eb, 0x4f1bf56e, 0xe1bd0543, 0x65d0175, 0xf634f188, 0x55bf50d5, 0xa20ca675, 0xee63ab86, 0x4a1f500e, 0x34903b93, 0xdc055ad1, 0x3a0ee2d7, 0x14e4c408, 0x2c5edf25, 0x997c5013, 0xa87d455a, 0x38013986, 0xda0e126a, 0x32a783d, 0x4de2f587, 0x8902544d, 0x8d4748d6, 0x6c29fbc0, 0x3a110bcd, 0x1a23cb7d, 0x6524d258, 0xe1f76ce2, 0xd4498573, 0x3a367dd4, 0x8c722b46, 0x764f0877, 0x3eb6f389, 0x2b632854, 0xa1b7c127, 0x84318082, 0x9f819aa1, 0x23495c64, 0xb8ab33d6, 0xea312680, 0xc42c9daa, 0xe4034d79, 0x6199b79f, 0x9a1c12a2, 0xe11c3833, 0xbbad2285, 0x6bb72c8a, 0x88be1a8d, 0x7da0975f, 0x915b8c7e, 0xf3c75658, 0xf378e228, 0x251b4d1c, 0x77073767, 0xe756a0eb, 0x2872f78d, 0xeec8f355, 0x4394595, 0xedafa957, 0xed7d613a, 0x934809d3, 0x51df3224, 0xa409ca8, 0x7bfda8a0, 0x1006ed36, 0x9ebd5b12, 0x7373122c, 0x580f5905, 0xe1e534d2, 0xd587aba9, 0xf6d58754, 0x77de6dd7, 0x245945ce, 0x2017e345, 0xfb216a44, 0x84bd9182, 0xdc097ce3, 0x7e54df73, 0xeb4d45a3, 0xf14cadf4, 0x47e04faf, 0x2216dc95, 0xd52c3d5b, 0x7931f72d, 0x97957181, 0xdf1398bd, 0x3a2320af, 0x962a598, 0x81fa973a, 0x47754846, 0x6d217a2, 0xbfc7cb3c, 0xd95e0290, 0x80aa3c7c, 0xcf8e5f97, 0x7fa05a3d, 0x8ee94fe9, 0xe2dc6a80, 0xa225c9fd, 0x691d58a0, 0x6bb3f30c, 0xe2fe5a12, 0x8752dbe4, 0x3848ec0c, 0x32e83e8e, 0x12b871c9, 0x2389ac84, 0x5a9cd06b, 0x3276a476, 0xdb948498, 0x1c2cd0e5, 0x2d0c7b79, 0x5e081fdb, 0x933dc4ac, 0x9ef6dd60, 0xb96b8d18, 0xcce2eb36, 0x961dde87, 0xa08999d0, 0x294b3e6e, 0xcc5109e5]; var r2a1ff2bb06e2979fb2a12 = [0xbe1b6b4b, 0xdeeb5dac, 0x7df7780, 0xe141d12b, 0x665a7e6c, 0xd48b1a83, 0xc1bd1f34, 0xae72ca4, 0x7e6f49fc, 0x279d261, 0x421198a8, 0x9da0f246, 0xaa620660, 0x98ae8dac, 0xb7ffbb9a, 0xd4c93379, 0x731315d, 0x520aee8a, 0x46e71f3, 0x6cd2ebd7, 0x4537df29, 0xd55a5003, 0xdabd6ac9, 0x12fc2e25, 0xe9d9ad19, 0xd288617b, 0x4f73af54, 0x3a4d5c58, 0x83df2dd0, 0xed8eaa59, 0x9503b0f9, 0x178f8ebb, 0x1cd4f1e0, 0x86c63832, 0xf0ef0075, 0xc58b8f0b, 0xf845ba6a, 0x31e06977, 0xf2631652, 0xf306975f, 0x9d3838, 0x8c2b0f57, 0x97a6631, 0x56170d19, 0x172f6f2c, 0x6da76f34, 0x76b4f2c3, 0x5c7215d7, 0xc2989b18, 0xc8eeb510, 0xc41547a0, 0x43c0c0c3, 0x98a0e43b, 0xa7defa8f, 0xa095af48, 0x5a534102, 0xc0d142a1, 0x3dc57c70, 0x3a714e7a, 0xee3570f, 0x7a02e86c, 0xcd5b1cb8, 0x8ec5cfe9, 0x4f96a099, 0xbd8e1261, 0x84e1bdf4, 0xe4a64725, 0xc36847ca, 0x69fee140, 0x710ff6e, 0xfe31fd89, 0xc39fa67a, 0xa1abcda4, 0x22d4e186, 0x4799bc33, 0x5db2bb8b, 0xccda830e, 0xead5ab37, 0xe5b63f9, 0x7afc5c7e, 0x56bcc8ad, 0x8136d88b, 0x4014f344, 0x2d18d5a8, 0x2e8ded01, 0xa645be6c, 0xbb0cac07, 0x160ff73e, 0x4b9681a5, 0xeb04479d, 0xb1b1aa56, 0x9ed6243a, 0xce360a53, 0xe491d2b5, 0xa320a22e, 0xbc789ea7, 0x798841a5, 0xc80feea3, 0x96a26b9, 0xc620f417, 0xa48a641, 0x8e3cd2b4, 0xb2787309, 0xee016d1d, 0x91a5354e, 0xf9df81e9, 0x4a65b9a3, 0x7431d712, 0x55657279, 0x905ae7e, 0x70bc9b8e, 0x4026136f, 0x9094b4ab, 0xc8a0f5da, 0x8456e4f3, 0xd64e707e, 0xe057cb13, 0x76c59ed3, 0x404b11e4, 0xb9c29527, 0xaababc91, 0xf1db7ad1, 0xac049013, 0x7293afc, 0x7c062a8a, 0xd2128b4b, 0xfc8c3b9f, 0xa36c8977]; function q7cad0d5d90(p2a9g070, p2a9g071, p2a9g072, k) { var rk = [35, 19, 24, 19, 21, 36, 20, 20, 10, 35, 19, 24, 19, 21, 36, 20, 20, 10, 35, 19, 24, 19, 21, 36, 20, 20, 10, 35, 19, 24, 19, 21, 36, 20, 20, 10, 35, 19, 24, 19, 21, 36, 20, 20, 10, 35, 19, 24, 19, 21, 36, 20, 20, 10, 35, 19, 24, 19, 21, 36, 20]; var k2 = [0x7d052f56, 0x2e08f9d1]; var lk = [0x7d052f56, 0x2e08f9d1]; var v = r2a1ff2bb06e2979fb2a10.slice(0); for (var O = 0; O < 122; O++) { v[O] ^= 0x29d14c1f; } v[1] ^= lk[1]; v[0] ^= lk[0]; v[3] = (v[3] >>> (lk[1] % 16)) | (v[3] << (32 - (lk[1] % 16))); v[2] = (v[2] >>> (lk[0] % 16)) | (v[2] << (32 - (lk[0] % 16))); v[5] += lk[1]; v[4] ^= lk[0]; v[7] = (v[7] << (lk[1] % 16)) | (v[7] >>> (32 - (lk[1] % 16))); v[6] += lk[0]; v[9] = (v[9] << (lk[1] % 16)) | (v[9] >>> (32 - (lk[1] % 16))); v[8] = (v[8] << (lk[0] % 16)) | (v[8] >>> (32 - (lk[0] % 16))); v[11] = (v[11] << (lk[1] % 16)) | (v[11] >>> (32 - (lk[1] % 16))); v[10] = (v[10] << (lk[0] % 16)) | (v[10] >>> (32 - (lk[0] % 16))); v[13] = (v[13] << (lk[1] % 16)) | (v[13] >>> (32 - (lk[1] % 16))); v[12] = (v[12] >>> (lk[0] % 16)) | (v[12] << (32 - (lk[0] % 16))); v[15] = (v[15] << (lk[1] % 16)) | (v[15] >>> (32 - (lk[1] % 16))); v[14] = (v[14] << (lk[0] % 16)) | (v[14] >>> (32 - (lk[0] % 16))); v[17] -= lk[1]; v[16] -= lk[0]; v[19] ^= lk[1]; v[18] ^= lk[0]; v[21] = (v[21] >>> (lk[1] % 16)) | (v[21] << (32 - (lk[1] % 16))); v[20] = (v[20] >>> (lk[0] % 16)) | (v[20] << (32 - (lk[0] % 16))); v[23] += lk[1]; v[22] ^= lk[0]; v[25] = (v[25] << (lk[1] % 16)) | (v[25] >>> (32 - (lk[1] % 16))); v[24] += lk[0]; v[27] = (v[27] << (lk[1] % 16)) | (v[27] >>> (32 - (lk[1] % 16))); v[26] = (v[26] << (lk[0] % 16)) | (v[26] >>> (32 - (lk[0] % 16))); v[29] = (v[29] << (lk[1] % 16)) | (v[29] >>> (32 - (lk[1] % 16))); v[28] = (v[28] << (lk[0] % 16)) | (v[28] >>> (32 - (lk[0] % 16))); v[31] = (v[31] << (lk[1] % 16)) | (v[31] >>> (32 - (lk[1] % 16))); v[30] = (v[30] >>> (lk[0] % 16)) | (v[30] << (32 - (lk[0] % 16))); v[33] = (v[33] << (lk[1] % 16)) | (v[33] >>> (32 - (lk[1] % 16))); v[32] = (v[32] << (lk[0] % 16)) | (v[32] >>> (32 - (lk[0] % 16))); v[35] -= lk[1]; v[34] -= lk[0]; v[37] ^= lk[1]; v[36] ^= lk[0]; v[39] = (v[39] >>> (lk[1] % 16)) | (v[39] << (32 - (lk[1] % 16))); v[38] = (v[38] >>> (lk[0] % 16)) | (v[38] << (32 - (lk[0] % 16))); v[41] += lk[1]; v[40] ^= lk[0]; v[43] = (v[43] << (lk[1] % 16)) | (v[43] >>> (32 - (lk[1] % 16))); v[42] += lk[0]; v[45] = (v[45] << (lk[1] % 16)) | (v[45] >>> (32 - (lk[1] % 16))); v[44] = (v[44] << (lk[0] % 16)) | (v[44] >>> (32 - (lk[0] % 16))); v[47] = (v[47] << (lk[1] % 16)) | (v[47] >>> (32 - (lk[1] % 16))); v[46] = (v[46] << (lk[0] % 16)) | (v[46] >>> (32 - (lk[0] % 16))); v[49] = (v[49] << (lk[1] % 16)) | (v[49] >>> (32 - (lk[1] % 16))); v[48] = (v[48] >>> (lk[0] % 16)) | (v[48] << (32 - (lk[0] % 16))); v[51] = (v[51] << (lk[1] % 16)) | (v[51] >>> (32 - (lk[1] % 16))); v[50] = (v[50] << (lk[0] % 16)) | (v[50] >>> (32 - (lk[0] % 16))); v[53] -= lk[1]; v[52] -= lk[0]; v[55] ^= lk[1]; v[54] ^= lk[0]; v[57] = (v[57] >>> (lk[1] % 16)) | (v[57] << (32 - (lk[1] % 16))); v[56] = (v[56] >>> (lk[0] % 16)) | (v[56] << (32 - (lk[0] % 16))); v[59] += lk[1]; v[58] ^= lk[0]; v[61] = (v[61] << (lk[1] % 16)) | (v[61] >>> (32 - (lk[1] % 16))); v[60] += lk[0]; v[63] = (v[63] << (lk[1] % 16)) | (v[63] >>> (32 - (lk[1] % 16))); v[62] = (v[62] << (lk[0] % 16)) | (v[62] >>> (32 - (lk[0] % 16))); v[65] = (v[65] << (lk[1] % 16)) | (v[65] >>> (32 - (lk[1] % 16))); v[64] = (v[64] << (lk[0] % 16)) | (v[64] >>> (32 - (lk[0] % 16))); v[67] = (v[67] << (lk[1] % 16)) | (v[67] >>> (32 - (lk[1] % 16))); v[66] = (v[66] >>> (lk[0] % 16)) | (v[66] << (32 - (lk[0] % 16))); v[69] = (v[69] << (lk[1] % 16)) | (v[69] >>> (32 - (lk[1] % 16))); v[68] = (v[68] << (lk[0] % 16)) | (v[68] >>> (32 - (lk[0] % 16))); v[71] -= lk[1]; v[70] -= lk[0]; v[73] ^= lk[1]; v[72] ^= lk[0]; v[75] = (v[75] >>> (lk[1] % 16)) | (v[75] << (32 - (lk[1] % 16))); v[74] = (v[74] >>> (lk[0] % 16)) | (v[74] << (32 - (lk[0] % 16))); v[77] += lk[1]; v[76] ^= lk[0]; v[79] = (v[79] << (lk[1] % 16)) | (v[79] >>> (32 - (lk[1] % 16))); v[78] += lk[0]; v[81] = (v[81] << (lk[1] % 16)) | (v[81] >>> (32 - (lk[1] % 16))); v[80] = (v[80] << (lk[0] % 16)) | (v[80] >>> (32 - (lk[0] % 16))); v[83] = (v[83] << (lk[1] % 16)) | (v[83] >>> (32 - (lk[1] % 16))); v[82] = (v[82] << (lk[0] % 16)) | (v[82] >>> (32 - (lk[0] % 16))); v[85] = (v[85] << (lk[1] % 16)) | (v[85] >>> (32 - (lk[1] % 16))); v[84] = (v[84] >>> (lk[0] % 16)) | (v[84] << (32 - (lk[0] % 16))); v[87] = (v[87] << (lk[1] % 16)) | (v[87] >>> (32 - (lk[1] % 16))); v[86] = (v[86] << (lk[0] % 16)) | (v[86] >>> (32 - (lk[0] % 16))); v[89] -= lk[1]; v[88] -= lk[0]; v[91] ^= lk[1]; v[90] ^= lk[0]; v[93] = (v[93] >>> (lk[1] % 16)) | (v[93] << (32 - (lk[1] % 16))); v[92] = (v[92] >>> (lk[0] % 16)) | (v[92] << (32 - (lk[0] % 16))); v[95] += lk[1]; v[94] ^= lk[0]; v[97] = (v[97] << (lk[1] % 16)) | (v[97] >>> (32 - (lk[1] % 16))); v[96] += lk[0]; v[99] = (v[99] << (lk[1] % 16)) | (v[99] >>> (32 - (lk[1] % 16))); v[98] = (v[98] << (lk[0] % 16)) | (v[98] >>> (32 - (lk[0] % 16))); v[101] = (v[101] << (lk[1] % 16)) | (v[101] >>> (32 - (lk[1] % 16))); v[100] = (v[100] << (lk[0] % 16)) | (v[100] >>> (32 - (lk[0] % 16))); v[103] = (v[103] << (lk[1] % 16)) | (v[103] >>> (32 - (lk[1] % 16))); v[102] = (v[102] >>> (lk[0] % 16)) | (v[102] << (32 - (lk[0] % 16))); v[105] = (v[105] << (lk[1] % 16)) | (v[105] >>> (32 - (lk[1] % 16))); v[104] = (v[104] << (lk[0] % 16)) | (v[104] >>> (32 - (lk[0] % 16))); v[107] -= lk[1]; v[106] -= lk[0]; v[109] ^= lk[1]; v[108] ^= lk[0]; v[111] = (v[111] >>> (lk[1] % 16)) | (v[111] << (32 - (lk[1] % 16))); v[110] = (v[110] >>> (lk[0] % 16)) | (v[110] << (32 - (lk[0] % 16))); v[113] += lk[1]; v[112] ^= lk[0]; v[115] = (v[115] << (lk[1] % 16)) | (v[115] >>> (32 - (lk[1] % 16))); v[114] += lk[0]; v[117] = (v[117] << (lk[1] % 16)) | (v[117] >>> (32 - (lk[1] % 16))); v[116] = (v[116] << (lk[0] % 16)) | (v[116] >>> (32 - (lk[0] % 16))); v[119] = (v[119] << (lk[1] % 16)) | (v[119] >>> (32 - (lk[1] % 16))); v[118] = (v[118] << (lk[0] % 16)) | (v[118] >>> (32 - (lk[0] % 16))); v[121] = (v[121] << (lk[1] % 16)) | (v[121] >>> (32 - (lk[1] % 16))); v[120] = (v[120] >>> (lk[0] % 16)) | (v[120] << (32 - (lk[0] % 16))); for (var I = 0; I < 122; I += 2) { var i, v0 = v[I] ^ k2[0], v1 = v[I + 1] ^ k2[1], d = 0x9E3779B9, sum = d * rk[I / 2]; for (i = 0; i < rk[I / 2]; i++) { v1 -= (((v0 << 4) ^ (v0 >>> 5)) + v0) ^ (sum + k[(sum >>> 11) & 3]); sum -= d; v0 -= (((v1 << 4) ^ (v1 >>> 5)) + v1) ^ (sum + k[sum & 3]); } v[I] = v0 ^ k2[1]; v[I + 1] = v1 ^ k2[0]; } for (var O = 121; O > 0; O--) { v[O] ^= v[O - 1]; } v[0] ^= 0x29d14c1f; var strc = ""; for (var i = 0; i < v.length; i++) { strc += String.fromCharCode(v[i] & 0xff, v[i] >>> 8 & 0xff, v[i] >>> 16 & 0xff, v[i] >>> 24 & 0xff); } return eval(strc)(p2a9g070, p2a9g071, p2a9g072, k); } function q7cad0d5d91(p2a9g070, p2a9g071, p2a9g072, k) { var rk = [33, 30, 41, 21, 26, 16, 31, 27, 10, 33, 30, 41, 21, 26, 16, 31, 27, 10, 33, 30, 41, 21, 26, 16, 31, 27, 10, 33, 30, 41, 21, 26, 16, 31, 27, 10, 33, 30, 41, 21, 26, 16, 31, 27, 10, 33, 30, 41, 21, 26, 16, 31, 27, 10, 33, 30, 41, 21, 26, 16, 31, 27, 10, 33]; var k2 = [0x64cbe3c1, 0x8e0d927]; var lk = [0x64cbe3c1, 0x8e0d927]; var v = r2a1ff2bb06e2979fb2a11.slice(0); for (var O = 0; O < 128; O++) { v[O] ^= 0x7833df55; } v[1] += lk[1]; v[0] -= lk[0]; v[3] ^= lk[1]; v[2] = (v[2] << (lk[0] % 16)) | (v[2] >>> (32 - (lk[0] % 16))); v[5] = (v[5] >>> (lk[1] % 16)) | (v[5] << (32 - (lk[1] % 16))); v[4] ^= lk[0]; v[7] += lk[1]; v[6] = (v[6] >>> (lk[0] % 16)) | (v[6] << (32 - (lk[0] % 16))); v[9] += lk[1]; v[8] = (v[8] << (lk[0] % 16)) | (v[8] >>> (32 - (lk[0] % 16))); v[11] -= lk[1]; v[10] -= lk[0]; v[13] -= lk[1]; v[12] -= lk[0]; v[15] = (v[15] << (lk[1] % 16)) | (v[15] >>> (32 - (lk[1] % 16))); v[14] += lk[0]; v[17] -= lk[1]; v[16] -= lk[0]; v[19] += lk[1]; v[18] -= lk[0]; v[21] ^= lk[1]; v[20] = (v[20] << (lk[0] % 16)) | (v[20] >>> (32 - (lk[0] % 16))); v[23] = (v[23] >>> (lk[1] % 16)) | (v[23] << (32 - (lk[1] % 16))); v[22] ^= lk[0]; v[25] += lk[1]; v[24] = (v[24] >>> (lk[0] % 16)) | (v[24] << (32 - (lk[0] % 16))); v[27] += lk[1]; v[26] = (v[26] << (lk[0] % 16)) | (v[26] >>> (32 - (lk[0] % 16))); v[29] -= lk[1]; v[28] -= lk[0]; v[31] -= lk[1]; v[30] -= lk[0]; v[33] = (v[33] << (lk[1] % 16)) | (v[33] >>> (32 - (lk[1] % 16))); v[32] += lk[0]; v[35] -= lk[1]; v[34] -= lk[0]; v[37] += lk[1]; v[36] -= lk[0]; v[39] ^= lk[1]; v[38] = (v[38] << (lk[0] % 16)) | (v[38] >>> (32 - (lk[0] % 16))); v[41] = (v[41] >>> (lk[1] % 16)) | (v[41] << (32 - (lk[1] % 16))); v[40] ^= lk[0]; v[43] += lk[1]; v[42] = (v[42] >>> (lk[0] % 16)) | (v[42] << (32 - (lk[0] % 16))); v[45] += lk[1]; v[44] = (v[44] << (lk[0] % 16)) | (v[44] >>> (32 - (lk[0] % 16))); v[47] -= lk[1]; v[46] -= lk[0]; v[49] -= lk[1]; v[48] -= lk[0]; v[51] = (v[51] << (lk[1] % 16)) | (v[51] >>> (32 - (lk[1] % 16))); v[50] += lk[0]; v[53] -= lk[1]; v[52] -= lk[0]; v[55] += lk[1]; v[54] -= lk[0]; v[57] ^= lk[1]; v[56] = (v[56] << (lk[0] % 16)) | (v[56] >>> (32 - (lk[0] % 16))); v[59] = (v[59] >>> (lk[1] % 16)) | (v[59] << (32 - (lk[1] % 16))); v[58] ^= lk[0]; v[61] += lk[1]; v[60] = (v[60] >>> (lk[0] % 16)) | (v[60] << (32 - (lk[0] % 16))); v[63] += lk[1]; v[62] = (v[62] << (lk[0] % 16)) | (v[62] >>> (32 - (lk[0] % 16))); v[65] -= lk[1]; v[64] -= lk[0]; v[67] -= lk[1]; v[66] -= lk[0]; v[69] = (v[69] << (lk[1] % 16)) | (v[69] >>> (32 - (lk[1] % 16))); v[68] += lk[0]; v[71] -= lk[1]; v[70] -= lk[0]; v[73] += lk[1]; v[72] -= lk[0]; v[75] ^= lk[1]; v[74] = (v[74] << (lk[0] % 16)) | (v[74] >>> (32 - (lk[0] % 16))); v[77] = (v[77] >>> (lk[1] % 16)) | (v[77] << (32 - (lk[1] % 16))); v[76] ^= lk[0]; v[79] += lk[1]; v[78] = (v[78] >>> (lk[0] % 16)) | (v[78] << (32 - (lk[0] % 16))); v[81] += lk[1]; v[80] = (v[80] << (lk[0] % 16)) | (v[80] >>> (32 - (lk[0] % 16))); v[83] -= lk[1]; v[82] -= lk[0]; v[85] -= lk[1]; v[84] -= lk[0]; v[87] = (v[87] << (lk[1] % 16)) | (v[87] >>> (32 - (lk[1] % 16))); v[86] += lk[0]; v[89] -= lk[1]; v[88] -= lk[0]; v[91] += lk[1]; v[90] -= lk[0]; v[93] ^= lk[1]; v[92] = (v[92] << (lk[0] % 16)) | (v[92] >>> (32 - (lk[0] % 16))); v[95] = (v[95] >>> (lk[1] % 16)) | (v[95] << (32 - (lk[1] % 16))); v[94] ^= lk[0]; v[97] += lk[1]; v[96] = (v[96] >>> (lk[0] % 16)) | (v[96] << (32 - (lk[0] % 16))); v[99] += lk[1]; v[98] = (v[98] << (lk[0] % 16)) | (v[98] >>> (32 - (lk[0] % 16))); v[101] -= lk[1]; v[100] -= lk[0]; v[103] -= lk[1]; v[102] -= lk[0]; v[105] = (v[105] << (lk[1] % 16)) | (v[105] >>> (32 - (lk[1] % 16))); v[104] += lk[0]; v[107] -= lk[1]; v[106] -= lk[0]; v[109] += lk[1]; v[108] -= lk[0]; v[111] ^= lk[1]; v[110] = (v[110] << (lk[0] % 16)) | (v[110] >>> (32 - (lk[0] % 16))); v[113] = (v[113] >>> (lk[1] % 16)) | (v[113] << (32 - (lk[1] % 16))); v[112] ^= lk[0]; v[115] += lk[1]; v[114] = (v[114] >>> (lk[0] % 16)) | (v[114] << (32 - (lk[0] % 16))); v[117] += lk[1]; v[116] = (v[116] << (lk[0] % 16)) | (v[116] >>> (32 - (lk[0] % 16))); v[119] -= lk[1]; v[118] -= lk[0]; v[121] -= lk[1]; v[120] -= lk[0]; v[123] = (v[123] << (lk[1] % 16)) | (v[123] >>> (32 - (lk[1] % 16))); v[122] += lk[0]; v[125] -= lk[1]; v[124] -= lk[0]; v[127] += lk[1]; v[126] -= lk[0]; for (var I = 0; I < 128; I += 2) { var i, v0 = v[I] ^ k2[0], v1 = v[I + 1] ^ k2[1], d = 0x9E3779B9, sum = d * rk[I / 2]; for (i = 0; i < rk[I / 2]; i++) { v1 -= (((v0 << 4) ^ (v0 >>> 5)) + v0) ^ (sum + k[(sum >>> 11) & 3]); sum -= d; v0 -= (((v1 << 4) ^ (v1 >>> 5)) + v1) ^ (sum + k[sum & 3]); } v[I] = v0 ^ k2[1]; v[I + 1] = v1 ^ k2[0]; } for (var O = 127; O > 0; O--) { v[O] ^= v[O - 1]; } v[0] ^= 0x7833df55; var strc = ""; for (var i = 0; i < v.length; i++) { strc += String.fromCharCode(v[i] & 0xff, v[i] >>> 8 & 0xff, v[i] >>> 16 & 0xff, v[i] >>> 24 & 0xff); } return eval(strc)(p2a9g070, p2a9g071, p2a9g072, k); } function q7cad0d5d92(p2a9g070, p2a9g071, p2a9g072, k) { var rk = [15, 37, 16, 33, 35, 31, 26, 36, 10, 15, 37, 16, 33, 35, 31, 26, 36, 10, 15, 37, 16, 33, 35, 31, 26, 36, 10, 15, 37, 16, 33, 35, 31, 26, 36, 10, 15, 37, 16, 33, 35, 31, 26, 36, 10, 15, 37, 16, 33, 35, 31, 26, 36, 10, 15, 37, 16, 33, 35, 31, 26, 36, 10, 15]; var k2 = [0x7c0bef6e, 0x408a6d06]; var lk = [0x7c0bef6e, 0x408a6d06]; var v = r2a1ff2bb06e2979fb2a12.slice(0); for (var O = 0; O < 128; O++) { v[O] ^= 0x2b74dd4f; } v[1] = (v[1] << (lk[1] % 16)) | (v[1] >>> (32 - (lk[1] % 16))); v[0] += lk[0]; v[3] ^= lk[1]; v[2] -= lk[0]; v[5] -= lk[1]; v[4] = (v[4] << (lk[0] % 16)) | (v[4] >>> (32 - (lk[0] % 16))); v[7] = (v[7] >>> (lk[1] % 16)) | (v[7] << (32 - (lk[1] % 16))); v[6] += lk[0]; v[9] = (v[9] << (lk[1] % 16)) | (v[9] >>> (32 - (lk[1] % 16))); v[8] += lk[0]; v[11] = (v[11] >>> (lk[1] % 16)) | (v[11] << (32 - (lk[1] % 16))); v[10] -= lk[0]; v[13] += lk[1]; v[12] += lk[0]; v[15] = (v[15] >>> (lk[1] % 16)) | (v[15] << (32 - (lk[1] % 16))); v[14] = (v[14] >>> (lk[0] % 16)) | (v[14] << (32 - (lk[0] % 16))); v[17] -= lk[1]; v[16] -= lk[0]; v[19] = (v[19] << (lk[1] % 16)) | (v[19] >>> (32 - (lk[1] % 16))); v[18] += lk[0]; v[21] ^= lk[1]; v[20] -= lk[0]; v[23] -= lk[1]; v[22] = (v[22] << (lk[0] % 16)) | (v[22] >>> (32 - (lk[0] % 16))); v[25] = (v[25] >>> (lk[1] % 16)) | (v[25] << (32 - (lk[1] % 16))); v[24] += lk[0]; v[27] = (v[27] << (lk[1] % 16)) | (v[27] >>> (32 - (lk[1] % 16))); v[26] += lk[0]; v[29] = (v[29] >>> (lk[1] % 16)) | (v[29] << (32 - (lk[1] % 16))); v[28] -= lk[0]; v[31] += lk[1]; v[30] += lk[0]; v[33] = (v[33] >>> (lk[1] % 16)) | (v[33] << (32 - (lk[1] % 16))); v[32] = (v[32] >>> (lk[0] % 16)) | (v[32] << (32 - (lk[0] % 16))); v[35] -= lk[1]; v[34] -= lk[0]; v[37] = (v[37] << (lk[1] % 16)) | (v[37] >>> (32 - (lk[1] % 16))); v[36] += lk[0]; v[39] ^= lk[1]; v[38] -= lk[0]; v[41] -= lk[1]; v[40] = (v[40] << (lk[0] % 16)) | (v[40] >>> (32 - (lk[0] % 16))); v[43] = (v[43] >>> (lk[1] % 16)) | (v[43] << (32 - (lk[1] % 16))); v[42] += lk[0]; v[45] = (v[45] << (lk[1] % 16)) | (v[45] >>> (32 - (lk[1] % 16))); v[44] += lk[0]; v[47] = (v[47] >>> (lk[1] % 16)) | (v[47] << (32 - (lk[1] % 16))); v[46] -= lk[0]; v[49] += lk[1]; v[48] += lk[0]; v[51] = (v[51] >>> (lk[1] % 16)) | (v[51] << (32 - (lk[1] % 16))); v[50] = (v[50] >>> (lk[0] % 16)) | (v[50] << (32 - (lk[0] % 16))); v[53] -= lk[1]; v[52] -= lk[0]; v[55] = (v[55] << (lk[1] % 16)) | (v[55] >>> (32 - (lk[1] % 16))); v[54] += lk[0]; v[57] ^= lk[1]; v[56] -= lk[0]; v[59] -= lk[1]; v[58] = (v[58] << (lk[0] % 16)) | (v[58] >>> (32 - (lk[0] % 16))); v[61] = (v[61] >>> (lk[1] % 16)) | (v[61] << (32 - (lk[1] % 16))); v[60] += lk[0]; v[63] = (v[63] << (lk[1] % 16)) | (v[63] >>> (32 - (lk[1] % 16))); v[62] += lk[0]; v[65] = (v[65] >>> (lk[1] % 16)) | (v[65] << (32 - (lk[1] % 16))); v[64] -= lk[0]; v[67] += lk[1]; v[66] += lk[0]; v[69] = (v[69] >>> (lk[1] % 16)) | (v[69] << (32 - (lk[1] % 16))); v[68] = (v[68] >>> (lk[0] % 16)) | (v[68] << (32 - (lk[0] % 16))); v[71] -= lk[1]; v[70] -= lk[0]; v[73] = (v[73] << (lk[1] % 16)) | (v[73] >>> (32 - (lk[1] % 16))); v[72] += lk[0]; v[75] ^= lk[1]; v[74] -= lk[0]; v[77] -= lk[1]; v[76] = (v[76] << (lk[0] % 16)) | (v[76] >>> (32 - (lk[0] % 16))); v[79] = (v[79] >>> (lk[1] % 16)) | (v[79] << (32 - (lk[1] % 16))); v[78] += lk[0]; v[81] = (v[81] << (lk[1] % 16)) | (v[81] >>> (32 - (lk[1] % 16))); v[80] += lk[0]; v[83] = (v[83] >>> (lk[1] % 16)) | (v[83] << (32 - (lk[1] % 16))); v[82] -= lk[0]; v[85] += lk[1]; v[84] += lk[0]; v[87] = (v[87] >>> (lk[1] % 16)) | (v[87] << (32 - (lk[1] % 16))); v[86] = (v[86] >>> (lk[0] % 16)) | (v[86] << (32 - (lk[0] % 16))); v[89] -= lk[1]; v[88] -= lk[0]; v[91] = (v[91] << (lk[1] % 16)) | (v[91] >>> (32 - (lk[1] % 16))); v[90] += lk[0]; v[93] ^= lk[1]; v[92] -= lk[0]; v[95] -= lk[1]; v[94] = (v[94] << (lk[0] % 16)) | (v[94] >>> (32 - (lk[0] % 16))); v[97] = (v[97] >>> (lk[1] % 16)) | (v[97] << (32 - (lk[1] % 16))); v[96] += lk[0]; v[99] = (v[99] << (lk[1] % 16)) | (v[99] >>> (32 - (lk[1] % 16))); v[98] += lk[0]; v[101] = (v[101] >>> (lk[1] % 16)) | (v[101] << (32 - (lk[1] % 16))); v[100] -= lk[0]; v[103] += lk[1]; v[102] += lk[0]; v[105] = (v[105] >>> (lk[1] % 16)) | (v[105] << (32 - (lk[1] % 16))); v[104] = (v[104] >>> (lk[0] % 16)) | (v[104] << (32 - (lk[0] % 16))); v[107] -= lk[1]; v[106] -= lk[0]; v[109] = (v[109] << (lk[1] % 16)) | (v[109] >>> (32 - (lk[1] % 16))); v[108] += lk[0]; v[111] ^= lk[1]; v[110] -= lk[0]; v[113] -= lk[1]; v[112] = (v[112] << (lk[0] % 16)) | (v[112] >>> (32 - (lk[0] % 16))); v[115] = (v[115] >>> (lk[1] % 16)) | (v[115] << (32 - (lk[1] % 16))); v[114] += lk[0]; v[117] = (v[117] << (lk[1] % 16)) | (v[117] >>> (32 - (lk[1] % 16))); v[116] += lk[0]; v[119] = (v[119] >>> (lk[1] % 16)) | (v[119] << (32 - (lk[1] % 16))); v[118] -= lk[0]; v[121] += lk[1]; v[120] += lk[0]; v[123] = (v[123] >>> (lk[1] % 16)) | (v[123] << (32 - (lk[1] % 16))); v[122] = (v[122] >>> (lk[0] % 16)) | (v[122] << (32 - (lk[0] % 16))); v[125] -= lk[1]; v[124] -= lk[0]; v[127] = (v[127] << (lk[1] % 16)) | (v[127] >>> (32 - (lk[1] % 16))); v[126] += lk[0]; for (var I = 0; I < 128; I += 2) { var i, v0 = v[I] ^ k2[0], v1 = v[I + 1] ^ k2[1], d = 0x9E3779B9, sum = d * rk[I / 2]; for (i = 0; i < rk[I / 2]; i++) { v1 -= (((v0 << 4) ^ (v0 >>> 5)) + v0) ^ (sum + k[(sum >>> 11) & 3]); sum -= d; v0 -= (((v1 << 4) ^ (v1 >>> 5)) + v1) ^ (sum + k[sum & 3]); } v[I] = v0 ^ k2[1]; v[I + 1] = v1 ^ k2[0]; } for (var O = 127; O > 0; O--) { v[O] ^= v[O - 1]; } v[0] ^= 0x2b74dd4f; var strc = ""; for (var i = 0; i < v.length; i++) { strc += String.fromCharCode(v[i] & 0xff, v[i] >>> 8 & 0xff, v[i] >>> 16 & 0xff, v[i] >>> 24 & 0xff); } return eval(strc)(p2a9g070, p2a9g071, p2a9g072, k); } function ub98484234(m0c5bcf12ffa0, m0c5bcf12ffa1, m0c5bcf12ffa2) { var rk = [32, 26, 26, 40, 12, 24, 38, 13, 10, 32, 26, 26, 40, 12, 24, 38, 13, 10, 32, 26, 26, 40, 12, 24, 38, 13, 10, 32, 26, 26, 40, 12, 24, 38, 13, 10, 32, 26, 26, 40, 12, 24, 38, 13, 10, 32, 26, 26, 40, 12, 24, 38, 13, 10, 32, 26, 26, 40, 12, 24, 38, 13, 10, 32, 26, 26, 40, 12, 24, 38, 13, 10, 32, 26, 26, 40, 12, 24, 38, 13, 10, 32, 26, 26, 40, 12, 24, 38, 13, 10, 32, 26, 26, 40, 12, 24, 38, 13, 10, 32, 26, 26, 40, 12, 24, 38, 13, 10, 32, 26, 26, 40, 12, 24, 38, 13, 10, 32, 26, 26, 40, 12, 24, 38, 13, 10, 32, 26, 26, 40, 12, 24, 38, 13, 10, 32, 26, 26, 40, 12, 24, 38, 13, 10, 32, 26, 26, 40, 12, 24, 38, 13, 10, 32, 26, 26, 40, 12, 24, 38, 13, 10, 32, 26, 26, 40, 12, 24, 38, 13, 10, 32, 26, 26, 40, 12, 24, 38, 13, 10, 32, 26, 26, 40, 12, 24, 38, 13, 10, 32, 26, 26, 40, 12, 24, 38, 13, 10, 32, 26, 26, 40, 12, 24, 38, 13, 10, 32, 26, 26, 40, 12, 24, 38, 13, 10, 32, 26, 26, 40, 12]; var k2 = [0x2e6e013, 0x7c1c9cd5]; var lk = [0x2e6e013, 0x7c1c9cd5]; var v = m0c5bcf12ffa.slice(0); var k = [0x3bbe6784, 0x6cd672ae, 0x96496df1, 0xbfe901eb]; for (var O = 0; O < 442; O++) { v[O] ^= 0x76b22790; } v[1] ^= lk[1]; v[0] = (v[0] >>> (lk[0] % 16)) | (v[0] << (32 - (lk[0] % 16))); v[3] += lk[1]; v[2] += lk[0]; v[5] = (v[5] >>> (lk[1] % 16)) | (v[5] << (32 - (lk[1] % 16))); v[4] = (v[4] << (lk[0] % 16)) | (v[4] >>> (32 - (lk[0] % 16))); v[7] = (v[7] << (lk[1] % 16)) | (v[7] >>> (32 - (lk[1] % 16))); v[6] ^= lk[0]; v[9] ^= lk[1]; v[8] = (v[8] << (lk[0] % 16)) | (v[8] >>> (32 - (lk[0] % 16))); v[11] = (v[11] >>> (lk[1] % 16)) | (v[11] << (32 - (lk[1] % 16))); v[10] = (v[10] >>> (lk[0] % 16)) | (v[10] << (32 - (lk[0] % 16))); v[13] ^= lk[1]; v[12] ^= lk[0]; v[15] = (v[15] >>> (lk[1] % 16)) | (v[15] << (32 - (lk[1] % 16))); v[14] = (v[14] << (lk[0] % 16)) | (v[14] >>> (32 - (lk[0] % 16))); v[17] -= lk[1]; v[16] -= lk[0]; v[19] ^= lk[1]; v[18] = (v[18] >>> (lk[0] % 16)) | (v[18] << (32 - (lk[0] % 16))); v[21] += lk[1]; v[20] += lk[0]; v[23] = (v[23] >>> (lk[1] % 16)) | (v[23] << (32 - (lk[1] % 16))); v[22] = (v[22] << (lk[0] % 16)) | (v[22] >>> (32 - (lk[0] % 16))); v[25] = (v[25] << (lk[1] % 16)) | (v[25] >>> (32 - (lk[1] % 16))); v[24] ^= lk[0]; v[27] ^= lk[1]; v[26] = (v[26] << (lk[0] % 16)) | (v[26] >>> (32 - (lk[0] % 16))); v[29] = (v[29] >>> (lk[1] % 16)) | (v[29] << (32 - (lk[1] % 16))); v[28] = (v[28] >>> (lk[0] % 16)) | (v[28] << (32 - (lk[0] % 16))); v[31] ^= lk[1]; v[30] ^= lk[0]; v[33] = (v[33] >>> (lk[1] % 16)) | (v[33] << (32 - (lk[1] % 16))); v[32] = (v[32] << (lk[0] % 16)) | (v[32] >>> (32 - (lk[0] % 16))); v[35] -= lk[1]; v[34] -= lk[0]; v[37] ^= lk[1]; v[36] = (v[36] >>> (lk[0] % 16)) | (v[36] << (32 - (lk[0] % 16))); v[39] += lk[1]; v[38] += lk[0]; v[41] = (v[41] >>> (lk[1] % 16)) | (v[41] << (32 - (lk[1] % 16))); v[40] = (v[40] << (lk[0] % 16)) | (v[40] >>> (32 - (lk[0] % 16))); v[43] = (v[43] << (lk[1] % 16)) | (v[43] >>> (32 - (lk[1] % 16))); v[42] ^= lk[0]; v[45] ^= lk[1]; v[44] = (v[44] << (lk[0] % 16)) | (v[44] >>> (32 - (lk[0] % 16))); v[47] = (v[47] >>> (lk[1] % 16)) | (v[47] << (32 - (lk[1] % 16))); v[46] = (v[46] >>> (lk[0] % 16)) | (v[46] << (32 - (lk[0] % 16))); v[49] ^= lk[1]; v[48] ^= lk[0]; v[51] = (v[51] >>> (lk[1] % 16)) | (v[51] << (32 - (lk[1] % 16))); v[50] = (v[50] << (lk[0] % 16)) | (v[50] >>> (32 - (lk[0] % 16))); v[53] -= lk[1]; v[52] -= lk[0]; v[55] ^= lk[1]; v[54] = (v[54] >>> (lk[0] % 16)) | (v[54] << (32 - (lk[0] % 16))); v[57] += lk[1]; v[56] += lk[0]; v[59] = (v[59] >>> (lk[1] % 16)) | (v[59] << (32 - (lk[1] % 16))); v[58] = (v[58] << (lk[0] % 16)) | (v[58] >>> (32 - (lk[0] % 16))); v[61] = (v[61] << (lk[1] % 16)) | (v[61] >>> (32 - (lk[1] % 16))); v[60] ^= lk[0]; v[63] ^= lk[1]; v[62] = (v[62] << (lk[0] % 16)) | (v[62] >>> (32 - (lk[0] % 16))); v[65] = (v[65] >>> (lk[1] % 16)) | (v[65] << (32 - (lk[1] % 16))); v[64] = (v[64] >>> (lk[0] % 16)) | (v[64] << (32 - (lk[0] % 16))); v[67] ^= lk[1]; v[66] ^= lk[0]; v[69] = (v[69] >>> (lk[1] % 16)) | (v[69] << (32 - (lk[1] % 16))); v[68] = (v[68] << (lk[0] % 16)) | (v[68] >>> (32 - (lk[0] % 16))); v[71] -= lk[1]; v[70] -= lk[0]; v[73] ^= lk[1]; v[72] = (v[72] >>> (lk[0] % 16)) | (v[72] << (32 - (lk[0] % 16))); v[75] += lk[1]; v[74] += lk[0]; v[77] = (v[77] >>> (lk[1] % 16)) | (v[77] << (32 - (lk[1] % 16))); v[76] = (v[76] << (lk[0] % 16)) | (v[76] >>> (32 - (lk[0] % 16))); v[79] = (v[79] << (lk[1] % 16)) | (v[79] >>> (32 - (lk[1] % 16))); v[78] ^= lk[0]; v[81] ^= lk[1]; v[80] = (v[80] << (lk[0] % 16)) | (v[80] >>> (32 - (lk[0] % 16))); v[83] = (v[83] >>> (lk[1] % 16)) | (v[83] << (32 - (lk[1] % 16))); v[82] = (v[82] >>> (lk[0] % 16)) | (v[82] << (32 - (lk[0] % 16))); v[85] ^= lk[1]; v[84] ^= lk[0]; v[87] = (v[87] >>> (lk[1] % 16)) | (v[87] << (32 - (lk[1] % 16))); v[86] = (v[86] << (lk[0] % 16)) | (v[86] >>> (32 - (lk[0] % 16))); v[89] -= lk[1]; v[88] -= lk[0]; v[91] ^= lk[1]; v[90] = (v[90] >>> (lk[0] % 16)) | (v[90] << (32 - (lk[0] % 16))); v[93] += lk[1]; v[92] += lk[0]; v[95] = (v[95] >>> (lk[1] % 16)) | (v[95] << (32 - (lk[1] % 16))); v[94] = (v[94] << (lk[0] % 16)) | (v[94] >>> (32 - (lk[0] % 16))); v[97] = (v[97] << (lk[1] % 16)) | (v[97] >>> (32 - (lk[1] % 16))); v[96] ^= lk[0]; v[99] ^= lk[1]; v[98] = (v[98] << (lk[0] % 16)) | (v[98] >>> (32 - (lk[0] % 16))); v[101] = (v[101] >>> (lk[1] % 16)) | (v[101] << (32 - (lk[1] % 16))); v[100] = (v[100] >>> (lk[0] % 16)) | (v[100] << (32 - (lk[0] % 16))); v[103] ^= lk[1]; v[102] ^= lk[0]; v[105] = (v[105] >>> (lk[1] % 16)) | (v[105] << (32 - (lk[1] % 16))); v[104] = (v[104] << (lk[0] % 16)) | (v[104] >>> (32 - (lk[0] % 16))); v[107] -= lk[1]; v[106] -= lk[0]; v[109] ^= lk[1]; v[108] = (v[108] >>> (lk[0] % 16)) | (v[108] << (32 - (lk[0] % 16))); v[111] += lk[1]; v[110] += lk[0]; v[113] = (v[113] >>> (lk[1] % 16)) | (v[113] << (32 - (lk[1] % 16))); v[112] = (v[112] << (lk[0] % 16)) | (v[112] >>> (32 - (lk[0] % 16))); v[115] = (v[115] << (lk[1] % 16)) | (v[115] >>> (32 - (lk[1] % 16))); v[114] ^= lk[0]; v[117] ^= lk[1]; v[116] = (v[116] << (lk[0] % 16)) | (v[116] >>> (32 - (lk[0] % 16))); v[119] = (v[119] >>> (lk[1] % 16)) | (v[119] << (32 - (lk[1] % 16))); v[118] = (v[118] >>> (lk[0] % 16)) | (v[118] << (32 - (lk[0] % 16))); v[121] ^= lk[1]; v[120] ^= lk[0]; v[123] = (v[123] >>> (lk[1] % 16)) | (v[123] << (32 - (lk[1] % 16))); v[122] = (v[122] << (lk[0] % 16)) | (v[122] >>> (32 - (lk[0] % 16))); v[125] -= lk[1]; v[124] -= lk[0]; v[127] ^= lk[1]; v[126] = (v[126] >>> (lk[0] % 16)) | (v[126] << (32 - (lk[0] % 16))); v[129] += lk[1]; v[128] += lk[0]; v[131] = (v[131] >>> (lk[1] % 16)) | (v[131] << (32 - (lk[1] % 16))); v[130] = (v[130] << (lk[0] % 16)) | (v[130] >>> (32 - (lk[0] % 16))); v[133] = (v[133] << (lk[1] % 16)) | (v[133] >>> (32 - (lk[1] % 16))); v[132] ^= lk[0]; v[135] ^= lk[1]; v[134] = (v[134] << (lk[0] % 16)) | (v[134] >>> (32 - (lk[0] % 16))); v[137] = (v[137] >>> (lk[1] % 16)) | (v[137] << (32 - (lk[1] % 16))); v[136] = (v[136] >>> (lk[0] % 16)) | (v[136] << (32 - (lk[0] % 16))); v[139] ^= lk[1]; v[138] ^= lk[0]; v[141] = (v[141] >>> (lk[1] % 16)) | (v[141] << (32 - (lk[1] % 16))); v[140] = (v[140] << (lk[0] % 16)) | (v[140] >>> (32 - (lk[0] % 16))); v[143] -= lk[1]; v[142] -= lk[0]; v[145] ^= lk[1]; v[144] = (v[144] >>> (lk[0] % 16)) | (v[144] << (32 - (lk[0] % 16))); v[147] += lk[1]; v[146] += lk[0]; v[149] = (v[149] >>> (lk[1] % 16)) | (v[149] << (32 - (lk[1] % 16))); v[148] = (v[148] << (lk[0] % 16)) | (v[148] >>> (32 - (lk[0] % 16))); v[151] = (v[151] << (lk[1] % 16)) | (v[151] >>> (32 - (lk[1] % 16))); v[150] ^= lk[0]; v[153] ^= lk[1]; v[152] = (v[152] << (lk[0] % 16)) | (v[152] >>> (32 - (lk[0] % 16))); v[155] = (v[155] >>> (lk[1] % 16)) | (v[155] << (32 - (lk[1] % 16))); v[154] = (v[154] >>> (lk[0] % 16)) | (v[154] << (32 - (lk[0] % 16))); v[157] ^= lk[1]; v[156] ^= lk[0]; v[159] = (v[159] >>> (lk[1] % 16)) | (v[159] << (32 - (lk[1] % 16))); v[158] = (v[158] << (lk[0] % 16)) | (v[158] >>> (32 - (lk[0] % 16))); v[161] -= lk[1]; v[160] -= lk[0]; v[163] ^= lk[1]; v[162] = (v[162] >>> (lk[0] % 16)) | (v[162] << (32 - (lk[0] % 16))); v[165] += lk[1]; v[164] += lk[0]; v[167] = (v[167] >>> (lk[1] % 16)) | (v[167] << (32 - (lk[1] % 16))); v[166] = (v[166] << (lk[0] % 16)) | (v[166] >>> (32 - (lk[0] % 16))); v[169] = (v[169] << (lk[1] % 16)) | (v[169] >>> (32 - (lk[1] % 16))); v[168] ^= lk[0]; v[171] ^= lk[1]; v[170] = (v[170] << (lk[0] % 16)) | (v[170] >>> (32 - (lk[0] % 16))); v[173] = (v[173] >>> (lk[1] % 16)) | (v[173] << (32 - (lk[1] % 16))); v[172] = (v[172] >>> (lk[0] % 16)) | (v[172] << (32 - (lk[0] % 16))); v[175] ^= lk[1]; v[174] ^= lk[0]; v[177] = (v[177] >>> (lk[1] % 16)) | (v[177] << (32 - (lk[1] % 16))); v[176] = (v[176] << (lk[0] % 16)) | (v[176] >>> (32 - (lk[0] % 16))); v[179] -= lk[1]; v[178] -= lk[0]; v[181] ^= lk[1]; v[180] = (v[180] >>> (lk[0] % 16)) | (v[180] << (32 - (lk[0] % 16))); v[183] += lk[1]; v[182] += lk[0]; v[185] = (v[185] >>> (lk[1] % 16)) | (v[185] << (32 - (lk[1] % 16))); v[184] = (v[184] << (lk[0] % 16)) | (v[184] >>> (32 - (lk[0] % 16))); v[187] = (v[187] << (lk[1] % 16)) | (v[187] >>> (32 - (lk[1] % 16))); v[186] ^= lk[0]; v[189] ^= lk[1]; v[188] = (v[188] << (lk[0] % 16)) | (v[188] >>> (32 - (lk[0] % 16))); v[191] = (v[191] >>> (lk[1] % 16)) | (v[191] << (32 - (lk[1] % 16))); v[190] = (v[190] >>> (lk[0] % 16)) | (v[190] << (32 - (lk[0] % 16))); v[193] ^= lk[1]; v[192] ^= lk[0]; v[195] = (v[195] >>> (lk[1] % 16)) | (v[195] << (32 - (lk[1] % 16))); v[194] = (v[194] << (lk[0] % 16)) | (v[194] >>> (32 - (lk[0] % 16))); v[197] -= lk[1]; v[196] -= lk[0]; v[199] ^= lk[1]; v[198] = (v[198] >>> (lk[0] % 16)) | (v[198] << (32 - (lk[0] % 16))); v[201] += lk[1]; v[200] += lk[0]; v[203] = (v[203] >>> (lk[1] % 16)) | (v[203] << (32 - (lk[1] % 16))); v[202] = (v[202] << (lk[0] % 16)) | (v[202] >>> (32 - (lk[0] % 16))); v[205] = (v[205] << (lk[1] % 16)) | (v[205] >>> (32 - (lk[1] % 16))); v[204] ^= lk[0]; v[207] ^= lk[1]; v[206] = (v[206] << (lk[0] % 16)) | (v[206] >>> (32 - (lk[0] % 16))); v[209] = (v[209] >>> (lk[1] % 16)) | (v[209] << (32 - (lk[1] % 16))); v[208] = (v[208] >>> (lk[0] % 16)) | (v[208] << (32 - (lk[0] % 16))); v[211] ^= lk[1]; v[210] ^= lk[0]; v[213] = (v[213] >>> (lk[1] % 16)) | (v[213] << (32 - (lk[1] % 16))); v[212] = (v[212] << (lk[0] % 16)) | (v[212] >>> (32 - (lk[0] % 16))); v[215] -= lk[1]; v[214] -= lk[0]; v[217] ^= lk[1]; v[216] = (v[216] >>> (lk[0] % 16)) | (v[216] << (32 - (lk[0] % 16))); v[219] += lk[1]; v[218] += lk[0]; v[221] = (v[221] >>> (lk[1] % 16)) | (v[221] << (32 - (lk[1] % 16))); v[220] = (v[220] << (lk[0] % 16)) | (v[220] >>> (32 - (lk[0] % 16))); v[223] = (v[223] << (lk[1] % 16)) | (v[223] >>> (32 - (lk[1] % 16))); v[222] ^= lk[0]; v[225] ^= lk[1]; v[224] = (v[224] << (lk[0] % 16)) | (v[224] >>> (32 - (lk[0] % 16))); v[227] = (v[227] >>> (lk[1] % 16)) | (v[227] << (32 - (lk[1] % 16))); v[226] = (v[226] >>> (lk[0] % 16)) | (v[226] << (32 - (lk[0] % 16))); v[229] ^= lk[1]; v[228] ^= lk[0]; v[231] = (v[231] >>> (lk[1] % 16)) | (v[231] << (32 - (lk[1] % 16))); v[230] = (v[230] << (lk[0] % 16)) | (v[230] >>> (32 - (lk[0] % 16))); v[233] -= lk[1]; v[232] -= lk[0]; v[235] ^= lk[1]; v[234] = (v[234] >>> (lk[0] % 16)) | (v[234] << (32 - (lk[0] % 16))); v[237] += lk[1]; v[236] += lk[0]; v[239] = (v[239] >>> (lk[1] % 16)) | (v[239] << (32 - (lk[1] % 16))); v[238] = (v[238] << (lk[0] % 16)) | (v[238] >>> (32 - (lk[0] % 16))); v[241] = (v[241] << (lk[1] % 16)) | (v[241] >>> (32 - (lk[1] % 16))); v[240] ^= lk[0]; v[243] ^= lk[1]; v[242] = (v[242] << (lk[0] % 16)) | (v[242] >>> (32 - (lk[0] % 16))); v[245] = (v[245] >>> (lk[1] % 16)) | (v[245] << (32 - (lk[1] % 16))); v[244] = (v[244] >>> (lk[0] % 16)) | (v[244] << (32 - (lk[0] % 16))); v[247] ^= lk[1]; v[246] ^= lk[0]; v[249] = (v[249] >>> (lk[1] % 16)) | (v[249] << (32 - (lk[1] % 16))); v[248] = (v[248] << (lk[0] % 16)) | (v[248] >>> (32 - (lk[0] % 16))); v[251] -= lk[1]; v[250] -= lk[0]; v[253] ^= lk[1]; v[252] = (v[252] >>> (lk[0] % 16)) | (v[252] << (32 - (lk[0] % 16))); v[255] += lk[1]; v[254] += lk[0]; v[257] = (v[257] >>> (lk[1] % 16)) | (v[257] << (32 - (lk[1] % 16))); v[256] = (v[256] << (lk[0] % 16)) | (v[256] >>> (32 - (lk[0] % 16))); v[259] = (v[259] << (lk[1] % 16)) | (v[259] >>> (32 - (lk[1] % 16))); v[258] ^= lk[0]; v[261] ^= lk[1]; v[260] = (v[260] << (lk[0] % 16)) | (v[260] >>> (32 - (lk[0] % 16))); v[263] = (v[263] >>> (lk[1] % 16)) | (v[263] << (32 - (lk[1] % 16))); v[262] = (v[262] >>> (lk[0] % 16)) | (v[262] << (32 - (lk[0] % 16))); v[265] ^= lk[1]; v[264] ^= lk[0]; v[267] = (v[267] >>> (lk[1] % 16)) | (v[267] << (32 - (lk[1] % 16))); v[266] = (v[266] << (lk[0] % 16)) | (v[266] >>> (32 - (lk[0] % 16))); v[269] -= lk[1]; v[268] -= lk[0]; v[271] ^= lk[1]; v[270] = (v[270] >>> (lk[0] % 16)) | (v[270] << (32 - (lk[0] % 16))); v[273] += lk[1]; v[272] += lk[0]; v[275] = (v[275] >>> (lk[1] % 16)) | (v[275] << (32 - (lk[1] % 16))); v[274] = (v[274] << (lk[0] % 16)) | (v[274] >>> (32 - (lk[0] % 16))); v[277] = (v[277] << (lk[1] % 16)) | (v[277] >>> (32 - (lk[1] % 16))); v[276] ^= lk[0]; v[279] ^= lk[1]; v[278] = (v[278] << (lk[0] % 16)) | (v[278] >>> (32 - (lk[0] % 16))); v[281] = (v[281] >>> (lk[1] % 16)) | (v[281] << (32 - (lk[1] % 16))); v[280] = (v[280] >>> (lk[0] % 16)) | (v[280] << (32 - (lk[0] % 16))); v[283] ^= lk[1]; v[282] ^= lk[0]; v[285] = (v[285] >>> (lk[1] % 16)) | (v[285] << (32 - (lk[1] % 16))); v[284] = (v[284] << (lk[0] % 16)) | (v[284] >>> (32 - (lk[0] % 16))); v[287] -= lk[1]; v[286] -= lk[0]; v[289] ^= lk[1]; v[288] = (v[288] >>> (lk[0] % 16)) | (v[288] << (32 - (lk[0] % 16))); v[291] += lk[1]; v[290] += lk[0]; v[293] = (v[293] >>> (lk[1] % 16)) | (v[293] << (32 - (lk[1] % 16))); v[292] = (v[292] << (lk[0] % 16)) | (v[292] >>> (32 - (lk[0] % 16))); v[295] = (v[295] << (lk[1] % 16)) | (v[295] >>> (32 - (lk[1] % 16))); v[294] ^= lk[0]; v[297] ^= lk[1]; v[296] = (v[296] << (lk[0] % 16)) | (v[296] >>> (32 - (lk[0] % 16))); v[299] = (v[299] >>> (lk[1] % 16)) | (v[299] << (32 - (lk[1] % 16))); v[298] = (v[298] >>> (lk[0] % 16)) | (v[298] << (32 - (lk[0] % 16))); v[301] ^= lk[1]; v[300] ^= lk[0]; v[303] = (v[303] >>> (lk[1] % 16)) | (v[303] << (32 - (lk[1] % 16))); v[302] = (v[302] << (lk[0] % 16)) | (v[302] >>> (32 - (lk[0] % 16))); v[305] -= lk[1]; v[304] -= lk[0]; v[307] ^= lk[1]; v[306] = (v[306] >>> (lk[0] % 16)) | (v[306] << (32 - (lk[0] % 16))); v[309] += lk[1]; v[308] += lk[0]; v[311] = (v[311] >>> (lk[1] % 16)) | (v[311] << (32 - (lk[1] % 16))); v[310] = (v[310] << (lk[0] % 16)) | (v[310] >>> (32 - (lk[0] % 16))); v[313] = (v[313] << (lk[1] % 16)) | (v[313] >>> (32 - (lk[1] % 16))); v[312] ^= lk[0]; v[315] ^= lk[1]; v[314] = (v[314] << (lk[0] % 16)) | (v[314] >>> (32 - (lk[0] % 16))); v[317] = (v[317] >>> (lk[1] % 16)) | (v[317] << (32 - (lk[1] % 16))); v[316] = (v[316] >>> (lk[0] % 16)) | (v[316] << (32 - (lk[0] % 16))); v[319] ^= lk[1]; v[318] ^= lk[0]; v[321] = (v[321] >>> (lk[1] % 16)) | (v[321] << (32 - (lk[1] % 16))); v[320] = (v[320] << (lk[0] % 16)) | (v[320] >>> (32 - (lk[0] % 16))); v[323] -= lk[1]; v[322] -= lk[0]; v[325] ^= lk[1]; v[324] = (v[324] >>> (lk[0] % 16)) | (v[324] << (32 - (lk[0] % 16))); v[327] += lk[1]; v[326] += lk[0]; v[329] = (v[329] >>> (lk[1] % 16)) | (v[329] << (32 - (lk[1] % 16))); v[328] = (v[328] << (lk[0] % 16)) | (v[328] >>> (32 - (lk[0] % 16))); v[331] = (v[331] << (lk[1] % 16)) | (v[331] >>> (32 - (lk[1] % 16))); v[330] ^= lk[0]; v[333] ^= lk[1]; v[332] = (v[332] << (lk[0] % 16)) | (v[332] >>> (32 - (lk[0] % 16))); v[335] = (v[335] >>> (lk[1] % 16)) | (v[335] << (32 - (lk[1] % 16))); v[334] = (v[334] >>> (lk[0] % 16)) | (v[334] << (32 - (lk[0] % 16))); v[337] ^= lk[1]; v[336] ^= lk[0]; v[339] = (v[339] >>> (lk[1] % 16)) | (v[339] << (32 - (lk[1] % 16))); v[338] = (v[338] << (lk[0] % 16)) | (v[338] >>> (32 - (lk[0] % 16))); v[341] -= lk[1]; v[340] -= lk[0]; v[343] ^= lk[1]; v[342] = (v[342] >>> (lk[0] % 16)) | (v[342] << (32 - (lk[0] % 16))); v[345] += lk[1]; v[344] += lk[0]; v[347] = (v[347] >>> (lk[1] % 16)) | (v[347] << (32 - (lk[1] % 16))); v[346] = (v[346] << (lk[0] % 16)) | (v[346] >>> (32 - (lk[0] % 16))); v[349] = (v[349] << (lk[1] % 16)) | (v[349] >>> (32 - (lk[1] % 16))); v[348] ^= lk[0]; v[351] ^= lk[1]; v[350] = (v[350] << (lk[0] % 16)) | (v[350] >>> (32 - (lk[0] % 16))); v[353] = (v[353] >>> (lk[1] % 16)) | (v[353] << (32 - (lk[1] % 16))); v[352] = (v[352] >>> (lk[0] % 16)) | (v[352] << (32 - (lk[0] % 16))); v[355] ^= lk[1]; v[354] ^= lk[0]; v[357] = (v[357] >>> (lk[1] % 16)) | (v[357] << (32 - (lk[1] % 16))); v[356] = (v[356] << (lk[0] % 16)) | (v[356] >>> (32 - (lk[0] % 16))); v[359] -= lk[1]; v[358] -= lk[0]; v[361] ^= lk[1]; v[360] = (v[360] >>> (lk[0] % 16)) | (v[360] << (32 - (lk[0] % 16))); v[363] += lk[1]; v[362] += lk[0]; v[365] = (v[365] >>> (lk[1] % 16)) | (v[365] << (32 - (lk[1] % 16))); v[364] = (v[364] << (lk[0] % 16)) | (v[364] >>> (32 - (lk[0] % 16))); v[367] = (v[367] << (lk[1] % 16)) | (v[367] >>> (32 - (lk[1] % 16))); v[366] ^= lk[0]; v[369] ^= lk[1]; v[368] = (v[368] << (lk[0] % 16)) | (v[368] >>> (32 - (lk[0] % 16))); v[371] = (v[371] >>> (lk[1] % 16)) | (v[371] << (32 - (lk[1] % 16))); v[370] = (v[370] >>> (lk[0] % 16)) | (v[370] << (32 - (lk[0] % 16))); v[373] ^= lk[1]; v[372] ^= lk[0]; v[375] = (v[375] >>> (lk[1] % 16)) | (v[375] << (32 - (lk[1] % 16))); v[374] = (v[374] << (lk[0] % 16)) | (v[374] >>> (32 - (lk[0] % 16))); v[377] -= lk[1]; v[376] -= lk[0]; v[379] ^= lk[1]; v[378] = (v[378] >>> (lk[0] % 16)) | (v[378] << (32 - (lk[0] % 16))); v[381] += lk[1]; v[380] += lk[0]; v[383] = (v[383] >>> (lk[1] % 16)) | (v[383] << (32 - (lk[1] % 16))); v[382] = (v[382] << (lk[0] % 16)) | (v[382] >>> (32 - (lk[0] % 16))); v[385] = (v[385] << (lk[1] % 16)) | (v[385] >>> (32 - (lk[1] % 16))); v[384] ^= lk[0]; v[387] ^= lk[1]; v[386] = (v[386] << (lk[0] % 16)) | (v[386] >>> (32 - (lk[0] % 16))); v[389] = (v[389] >>> (lk[1] % 16)) | (v[389] << (32 - (lk[1] % 16))); v[388] = (v[388] >>> (lk[0] % 16)) | (v[388] << (32 - (lk[0] % 16))); v[391] ^= lk[1]; v[390] ^= lk[0]; v[393] = (v[393] >>> (lk[1] % 16)) | (v[393] << (32 - (lk[1] % 16))); v[392] = (v[392] << (lk[0] % 16)) | (v[392] >>> (32 - (lk[0] % 16))); v[395] -= lk[1]; v[394] -= lk[0]; v[397] ^= lk[1]; v[396] = (v[396] >>> (lk[0] % 16)) | (v[396] << (32 - (lk[0] % 16))); v[399] += lk[1]; v[398] += lk[0]; v[401] = (v[401] >>> (lk[1] % 16)) | (v[401] << (32 - (lk[1] % 16))); v[400] = (v[400] << (lk[0] % 16)) | (v[400] >>> (32 - (lk[0] % 16))); v[403] = (v[403] << (lk[1] % 16)) | (v[403] >>> (32 - (lk[1] % 16))); v[402] ^= lk[0]; v[405] ^= lk[1]; v[404] = (v[404] << (lk[0] % 16)) | (v[404] >>> (32 - (lk[0] % 16))); v[407] = (v[407] >>> (lk[1] % 16)) | (v[407] << (32 - (lk[1] % 16))); v[406] = (v[406] >>> (lk[0] % 16)) | (v[406] << (32 - (lk[0] % 16))); v[409] ^= lk[1]; v[408] ^= lk[0]; v[411] = (v[411] >>> (lk[1] % 16)) | (v[411] << (32 - (lk[1] % 16))); v[410] = (v[410] << (lk[0] % 16)) | (v[410] >>> (32 - (lk[0] % 16))); v[413] -= lk[1]; v[412] -= lk[0]; v[415] ^= lk[1]; v[414] = (v[414] >>> (lk[0] % 16)) | (v[414] << (32 - (lk[0] % 16))); v[417] += lk[1]; v[416] += lk[0]; v[419] = (v[419] >>> (lk[1] % 16)) | (v[419] << (32 - (lk[1] % 16))); v[418] = (v[418] << (lk[0] % 16)) | (v[418] >>> (32 - (lk[0] % 16))); v[421] = (v[421] << (lk[1] % 16)) | (v[421] >>> (32 - (lk[1] % 16))); v[420] ^= lk[0]; v[423] ^= lk[1]; v[422] = (v[422] << (lk[0] % 16)) | (v[422] >>> (32 - (lk[0] % 16))); v[425] = (v[425] >>> (lk[1] % 16)) | (v[425] << (32 - (lk[1] % 16))); v[424] = (v[424] >>> (lk[0] % 16)) | (v[424] << (32 - (lk[0] % 16))); v[427] ^= lk[1]; v[426] ^= lk[0]; v[429] = (v[429] >>> (lk[1] % 16)) | (v[429] << (32 - (lk[1] % 16))); v[428] = (v[428] << (lk[0] % 16)) | (v[428] >>> (32 - (lk[0] % 16))); v[431] -= lk[1]; v[430] -= lk[0]; v[433] ^= lk[1]; v[432] = (v[432] >>> (lk[0] % 16)) | (v[432] << (32 - (lk[0] % 16))); v[435] += lk[1]; v[434] += lk[0]; v[437] = (v[437] >>> (lk[1] % 16)) | (v[437] << (32 - (lk[1] % 16))); v[436] = (v[436] << (lk[0] % 16)) | (v[436] >>> (32 - (lk[0] % 16))); v[439] = (v[439] << (lk[1] % 16)) | (v[439] >>> (32 - (lk[1] % 16))); v[438] ^= lk[0]; v[441] ^= lk[1]; v[440] = (v[440] << (lk[0] % 16)) | (v[440] >>> (32 - (lk[0] % 16))); for (var I = 0; I < 442; I += 2) { var i, v0 = v[I] ^ k2[0], v1 = v[I + 1] ^ k2[1], d = 0x9E3779B9, sum = d * rk[I / 2]; for (i = 0; i < rk[I / 2]; i++) { v1 -= (((v0 << 4) ^ (v0 >>> 5)) + v0) ^ (sum + k[(sum >>> 11) & 3]); sum -= d; v0 -= (((v1 << 4) ^ (v1 >>> 5)) + v1) ^ (sum + k[sum & 3]); } v[I] = v0 ^ k2[1]; v[I + 1] = v1 ^ k2[0]; } for (var O = 441; O > 0; O--) { v[O] ^= v[O - 1]; } v[0] ^= 0x76b22790; var strc = ""; for (var i = 0; i < v.length; i++) { strc += String.fromCharCode(v[i] & 0xff, v[i] >>> 8 & 0xff, v[i] >>> 16 & 0xff, v[i] >>> 24 & 0xff); } return eval(strc)(m0c5bcf12ffa0, m0c5bcf12ffa1, m0c5bcf12ffa2); } var m0c5bcf12ffa = [0x59812d3e, 0xd9cc67bb, 0x5b528c, 0xf0a660d1, 0x50906dc8, 0x32ab15a1, 0x1ee98a39, 0x4d729b01, 0x6e1b2be2, 0xdda25f92, 0x59cef380, 0x954aa177, 0x50785890, 0xaee0b1ab, 0xf922b2b1, 0x6bf57d09, 0x389d6113, 0x9c3ea921, 0xc290a6df, 0x75e1a632, 0xad357707, 0xf8d18906, 0x63ade34b, 0x94a622f7, 0x846f17ff, 0xb25d3ac9, 0x8f63a5b5, 0xced85ce3, 0x9249eb25, 0xe7c58381, 0x81cfcbf, 0x88f2b75a, 0xf391f0b8, 0x2ac763f3, 0x166ca47, 0x1fa0c3a, 0x4a7c0d74, 0x61a9d922, 0x58c46d24, 0x6302986c, 0x3d338106, 0x28f43844, 0x546094cd, 0x6e0327d2, 0x37ae7470, 0x486570e6, 0x78466dce, 0xcec7771b, 0x85e6be5d, 0x9a5389de, 0xf739d30d, 0x94ac328d, 0x803bdb2a, 0xa354fd28, 0x6291280d, 0x72f61bba, 0x729fecd7, 0xc514be14, 0xc1d4bac5, 0x46cf0db5, 0x71c4d139, 0xca529c0f, 0x9129d903, 0xbcb4ac65, 0xfaa43bed, 0x33453bbe, 0x2de2c9a1, 0xce81a00c, 0x43cb8801, 0xfd6eb087, 0x2f042a9a, 0xb3ad2e58, 0x663ba5c1, 0x1d90b23b, 0x61ba0016, 0x1a519b80, 0x1ea8f2e1, 0xd6b5b39b, 0xa89a448, 0xce1d3119, 0x3aed9705, 0xf91ed46a, 0xab512687, 0x56f06017, 0x85d85fef, 0xdfcdaca5, 0xdc03b5a6, 0x6452605e, 0xac62e2a8, 0xe4279a7b, 0x8dbd88b0, 0x6f863974, 0x2eb6529e, 0x27568e8d, 0x8f0554e9, 0xbe814fc5, 0xb6ecaed5, 0x56f70a42, 0x87d4dabb, 0x36a0fb1e, 0x18ce8ae0, 0x6d7fbc50, 0xfbd8bfb0, 0x5389c7e8, 0x7007613c, 0x1aff88db, 0xd95747d7, 0x63973e6b, 0x9ed6552e, 0xebf30be5, 0xab7a8cf, 0x6cc91eac, 0x4966c3cf, 0x89ed92a0, 0xb42990fc, 0xb5d080f7, 0xda88f4d8, 0x8cd3838e, 0x4aa45ac8, 0xd5852c05, 0xc6c8cec, 0x52e6d92, 0xb3af3af, 0x7bf9f4c2, 0x78030a, 0xe83f5156, 0x4a8a72be, 0x4f72eba8, 0x13e8fc8b, 0x9f95c33e, 0x2b562518, 0xb9bfd7f6, 0xa2ccebfb, 0x15c1d7bb, 0xaf2e0be6, 0x937fa465, 0x1f3d40ac, 0x41b3882a, 0xa2859aa6, 0x183d985a, 0x7bc99803, 0x7f0d5dda, 0x6f558a27, 0xb8e4a1ac, 0x7119bbc0, 0xc17a6a5d, 0xde0775f2, 0x28399ce0, 0xb92ba4b0, 0xdc33816, 0x3952fa5, 0xe4375c51, 0xd1aea7a3, 0xf55db23, 0x6ddc7d41, 0x3994b7e9, 0xb6f9c20b, 0x18db4b4e, 0x8f60aaf7, 0x19894671, 0xa6d7f9b9, 0x7a53ce86, 0x8f440129, 0xaaf48027, 0xc5db990f, 0x9fd2fe5d, 0x528ad513, 0xb2286258, 0x1e1e32ef, 0xc07e062f, 0xb7b8cad9, 0x9c00e5ae, 0xc318e91, 0x993d041f, 0xcf7dff05, 0x8fa3bc94, 0x2fb1f95, 0xdd7bf28c, 0xf1e8061a, 0xc0be54e6, 0xb7d9acb2, 0x85025a78, 0x1a3d9a8d, 0xd9acea47, 0x21a2c51e, 0xa36c12e2, 0x757b34ba, 0x80a75a6b, 0x76ecab8b, 0x3d5e28f7, 0xd4048c0f, 0x8b8439b4, 0xe1f490c1, 0x711a0079, 0x6be5c662, 0x3962031b, 0xd74bd688, 0xa094e820, 0x1dc85e49, 0x3a5da7f5, 0x78da2065, 0xa69cadc9, 0x63abe333, 0x6302902b, 0x2b58c8d, 0xae12e0e3, 0x48699c8, 0x5a79cc80, 0x218f9f90, 0xbe094b72, 0xc6712c5, 0xa5a2d795, 0x7c9db614, 0x859160b4, 0xb70c64, 0x755b5511, 0x1f4da1b0, 0x8ba6ea3f, 0x6e6db752, 0x52a83d01, 0xda391e38, 0xdd38e3f5, 0x6f8a8eb4, 0x81bd92e6, 0xdba6b18b, 0xa4fcb45a, 0x2b066e21, 0xf1e4c35c, 0xcd44d1f, 0x65e1d1a8, 0xaf307d40, 0x28bbace3, 0xf0dccc36, 0xc4e38a8, 0xa3e06271, 0x96348448, 0x638e2257, 0x72ddc8d9, 0xe1f392db, 0xca9fcc98, 0x3a3278b9, 0x8cf04bf2, 0xe7fb0bfe, 0x78ad4230, 0xbd682b8d, 0x243f4c68, 0x321e125c, 0x7cd76371, 0x32d21e7d, 0xe07c0d17, 0x7a273721, 0xa78cdf4, 0x50085ecc, 0xbc557d1e, 0xd2a4baa, 0x559ddcbc, 0x450f472, 0xad6d261d, 0x7acf88f0, 0xc6c1c74f, 0x3b42cfac, 0x9872cddf, 0x47391aa4, 0x67f46aa6, 0x86a12506, 0xcc3aff19, 0x4a7e065c, 0x1680edea, 0x5e58155c, 0x835b536b, 0x4b730768, 0x6001151f, 0x4009b5dc, 0xc8fc42cd, 0xdce8922d, 0xcd2241d5, 0x948b6c50, 0xfe74ba2d, 0x365b6f23, 0xfe42da11, 0x3c92e622, 0x1e205a20, 0xbeddde1f, 0x962ebf2b, 0x4be2e48f, 0x5543c6cc, 0x8bbf9ea0, 0xfe192e62, 0x35372e1c, 0x4ab8f728, 0x48738d7a, 0xe37c4bb6, 0x7fe7601c, 0x8011b051, 0x3c951dc6, 0x68a62814, 0x8e03115b, 0xffd3ef14, 0xfbfd33e4, 0x8c0c1241, 0xb3f71a93, 0x9e4fc717, 0xcc0cb3c7, 0x4da5d7bd, 0xeccaf629, 0xae5ea131, 0xc76039ed, 0xf2c7d1b, 0xa2a9a774, 0xa18bf0af, 0x4fa50b1e, 0xc486b7f7, 0xa24919a, 0xdab00e4b, 0xc5152d41, 0x3d627be0, 0xd5722007, 0x189bd694, 0x9911bcb8, 0x958c7edc, 0x7d721771, 0x57dbe16a, 0xd2a24905, 0xa22b22cb, 0x2363aba3, 0x1bdae4ef, 0x47a4250d, 0xea6572fa, 0xb712ea16, 0xd35d5830, 0x97ddf497, 0x73f9a674, 0x632b7b5e, 0xaa823723, 0xed6ece89, 0xe647ab8, 0x8f39110c, 0xfa78129d, 0xfcecd72e, 0x79ce141b, 0xd64ed606, 0x5dcadd9, 0x3846a737, 0x6654d223, 0x51c28cec, 0xce706b87, 0xe4409c22, 0x2b8c12bf, 0x103b4cd, 0x5e6529a3, 0x9352942e, 0xad6df8e7, 0x53716205, 0x86368d12, 0x56b326ca, 0xe5744dcc, 0x9bc2ddc2, 0xdfc5b820, 0xd64f1522, 0x7605b6aa, 0x42341c58, 0x64bfb36f, 0x9870cd3b, 0xb4d1e2b4, 0x1d7bd9ca, 0xdcb897b4, 0xe8dceb61, 0xa9262901, 0x74276c03, 0xc949cdfc, 0x38b56fc4, 0xff80df29, 0x1e997432, 0xe1f4d2d3, 0x62b583ad, 0xaff1b574, 0x30e7789e, 0xa794f7af, 0xd7e49b9e, 0x6eeaae7e, 0xa38f70a3, 0x516f45b4, 0x6b715ed4, 0x67aef2c4, 0x48b26127, 0x38949302, 0x24988d89, 0xf4f24c3e, 0x73551e86, 0xfa6200e3, 0xc29c2cda, 0xf60b936e, 0x179966a5, 0x22c1fe79, 0xe3391abe, 0x1967c4d0, 0x1dd28d38, 0x116e0bd0, 0x2a1f5cc5, 0xb04a23ec, 0x65752091, 0xba5d64db, 0x78490ea8, 0x74ea8340, 0x554fae9b, 0xd35a806e, 0xce7f4df6, 0x5adb72fd, 0xdd6fbc1f, 0xbb1578ae, 0x70579143, 0xf88deade, 0xb9328156, 0x5d2bce5e, 0xba12dc9e, 0x441443cd, 0xd29fc310, 0x18379a3f, 0x652b3338, 0x3c14d7f8, 0x5e77490e, 0x5eaaf8ac, 0xe9e2f515, 0xa98c4863, 0x9fa36013, 0x26d1a8e8, 0x79edcb9f, 0xb644a655, 0x89179d5f, 0x9d907e9d, 0x2d2624b1, 0x311f0eb, 0x7caeba34, 0x8da5d150, 0x7eadf402, 0xb92e755c, 0xad9bcc2e, 0xa5e264ed, 0xc908c983, 0x493e9029, 0x8b53147a, 0x7fbee3e7]; function k927cea2d4369(ic23jc90120, ic23jc90121, ic23jc90122, ic23jc90123) { var rk = [21, 28, 11, 27, 11, 24, 18, 14, 10, 21, 28, 11, 27, 11, 24, 18, 14, 10, 21, 28, 11, 27, 11, 24, 18, 14, 10, 21, 28, 11, 27, 11, 24, 18, 14, 10, 21, 28, 11, 27, 11, 24, 18, 14, 10, 21, 28, 11, 27, 11, 24, 18, 14, 10]; var k2 = [0x2f07c697, 0x1f23cdea]; var lk = [0x2f07c697, 0x1f23cdea]; var v = ic23jc9012.slice(0); var k = [0x174d4dc8, 0xfb8b26a6, 0x7b5a767d, 0x3b251e1f]; for (var O = 0; O < 108; O++) { v[O] ^= 0x5490aaf6; } v[1] = (v[1] >>> (lk[1] % 16)) | (v[1] << (32 - (lk[1] % 16))); v[0] = (v[0] >>> (lk[0] % 16)) | (v[0] << (32 - (lk[0] % 16))); v[3] += lk[1]; v[2] = (v[2] << (lk[0] % 16)) | (v[2] >>> (32 - (lk[0] % 16))); v[5] = (v[5] << (lk[1] % 16)) | (v[5] >>> (32 - (lk[1] % 16))); v[4] += lk[0]; v[7] += lk[1]; v[6] ^= lk[0]; v[9] -= lk[1]; v[8] = (v[8] >>> (lk[0] % 16)) | (v[8] << (32 - (lk[0] % 16))); v[11] = (v[11] >>> (lk[1] % 16)) | (v[11] << (32 - (lk[1] % 16))); v[10] = (v[10] << (lk[0] % 16)) | (v[10] >>> (32 - (lk[0] % 16))); v[13] = (v[13] >>> (lk[1] % 16)) | (v[13] << (32 - (lk[1] % 16))); v[12] -= lk[0]; v[15] = (v[15] >>> (lk[1] % 16)) | (v[15] << (32 - (lk[1] % 16))); v[14] = (v[14] << (lk[0] % 16)) | (v[14] >>> (32 - (lk[0] % 16))); v[17] -= lk[1]; v[16] -= lk[0]; v[19] = (v[19] >>> (lk[1] % 16)) | (v[19] << (32 - (lk[1] % 16))); v[18] = (v[18] >>> (lk[0] % 16)) | (v[18] << (32 - (lk[0] % 16))); v[21] += lk[1]; v[20] = (v[20] << (lk[0] % 16)) | (v[20] >>> (32 - (lk[0] % 16))); v[23] = (v[23] << (lk[1] % 16)) | (v[23] >>> (32 - (lk[1] % 16))); v[22] += lk[0]; v[25] += lk[1]; v[24] ^= lk[0]; v[27] -= lk[1]; v[26] = (v[26] >>> (lk[0] % 16)) | (v[26] << (32 - (lk[0] % 16))); v[29] = (v[29] >>> (lk[1] % 16)) | (v[29] << (32 - (lk[1] % 16))); v[28] = (v[28] << (lk[0] % 16)) | (v[28] >>> (32 - (lk[0] % 16))); v[31] = (v[31] >>> (lk[1] % 16)) | (v[31] << (32 - (lk[1] % 16))); v[30] -= lk[0]; v[33] = (v[33] >>> (lk[1] % 16)) | (v[33] << (32 - (lk[1] % 16))); v[32] = (v[32] << (lk[0] % 16)) | (v[32] >>> (32 - (lk[0] % 16))); v[35] -= lk[1]; v[34] -= lk[0]; v[37] = (v[37] >>> (lk[1] % 16)) | (v[37] << (32 - (lk[1] % 16))); v[36] = (v[36] >>> (lk[0] % 16)) | (v[36] << (32 - (lk[0] % 16))); v[39] += lk[1]; v[38] = (v[38] << (lk[0] % 16)) | (v[38] >>> (32 - (lk[0] % 16))); v[41] = (v[41] << (lk[1] % 16)) | (v[41] >>> (32 - (lk[1] % 16))); v[40] += lk[0]; v[43] += lk[1]; v[42] ^= lk[0]; v[45] -= lk[1]; v[44] = (v[44] >>> (lk[0] % 16)) | (v[44] << (32 - (lk[0] % 16))); v[47] = (v[47] >>> (lk[1] % 16)) | (v[47] << (32 - (lk[1] % 16))); v[46] = (v[46] << (lk[0] % 16)) | (v[46] >>> (32 - (lk[0] % 16))); v[49] = (v[49] >>> (lk[1] % 16)) | (v[49] << (32 - (lk[1] % 16))); v[48] -= lk[0]; v[51] = (v[51] >>> (lk[1] % 16)) | (v[51] << (32 - (lk[1] % 16))); v[50] = (v[50] << (lk[0] % 16)) | (v[50] >>> (32 - (lk[0] % 16))); v[53] -= lk[1]; v[52] -= lk[0]; v[55] = (v[55] >>> (lk[1] % 16)) | (v[55] << (32 - (lk[1] % 16))); v[54] = (v[54] >>> (lk[0] % 16)) | (v[54] << (32 - (lk[0] % 16))); v[57] += lk[1]; v[56] = (v[56] << (lk[0] % 16)) | (v[56] >>> (32 - (lk[0] % 16))); v[59] = (v[59] << (lk[1] % 16)) | (v[59] >>> (32 - (lk[1] % 16))); v[58] += lk[0]; v[61] += lk[1]; v[60] ^= lk[0]; v[63] -= lk[1]; v[62] = (v[62] >>> (lk[0] % 16)) | (v[62] << (32 - (lk[0] % 16))); v[65] = (v[65] >>> (lk[1] % 16)) | (v[65] << (32 - (lk[1] % 16))); v[64] = (v[64] << (lk[0] % 16)) | (v[64] >>> (32 - (lk[0] % 16))); v[67] = (v[67] >>> (lk[1] % 16)) | (v[67] << (32 - (lk[1] % 16))); v[66] -= lk[0]; v[69] = (v[69] >>> (lk[1] % 16)) | (v[69] << (32 - (lk[1] % 16))); v[68] = (v[68] << (lk[0] % 16)) | (v[68] >>> (32 - (lk[0] % 16))); v[71] -= lk[1]; v[70] -= lk[0]; v[73] = (v[73] >>> (lk[1] % 16)) | (v[73] << (32 - (lk[1] % 16))); v[72] = (v[72] >>> (lk[0] % 16)) | (v[72] << (32 - (lk[0] % 16))); v[75] += lk[1]; v[74] = (v[74] << (lk[0] % 16)) | (v[74] >>> (32 - (lk[0] % 16))); v[77] = (v[77] << (lk[1] % 16)) | (v[77] >>> (32 - (lk[1] % 16))); v[76] += lk[0]; v[79] += lk[1]; v[78] ^= lk[0]; v[81] -= lk[1]; v[80] = (v[80] >>> (lk[0] % 16)) | (v[80] << (32 - (lk[0] % 16))); v[83] = (v[83] >>> (lk[1] % 16)) | (v[83] << (32 - (lk[1] % 16))); v[82] = (v[82] << (lk[0] % 16)) | (v[82] >>> (32 - (lk[0] % 16))); v[85] = (v[85] >>> (lk[1] % 16)) | (v[85] << (32 - (lk[1] % 16))); v[84] -= lk[0]; v[87] = (v[87] >>> (lk[1] % 16)) | (v[87] << (32 - (lk[1] % 16))); v[86] = (v[86] << (lk[0] % 16)) | (v[86] >>> (32 - (lk[0] % 16))); v[89] -= lk[1]; v[88] -= lk[0]; v[91] = (v[91] >>> (lk[1] % 16)) | (v[91] << (32 - (lk[1] % 16))); v[90] = (v[90] >>> (lk[0] % 16)) | (v[90] << (32 - (lk[0] % 16))); v[93] += lk[1]; v[92] = (v[92] << (lk[0] % 16)) | (v[92] >>> (32 - (lk[0] % 16))); v[95] = (v[95] << (lk[1] % 16)) | (v[95] >>> (32 - (lk[1] % 16))); v[94] += lk[0]; v[97] += lk[1]; v[96] ^= lk[0]; v[99] -= lk[1]; v[98] = (v[98] >>> (lk[0] % 16)) | (v[98] << (32 - (lk[0] % 16))); v[101] = (v[101] >>> (lk[1] % 16)) | (v[101] << (32 - (lk[1] % 16))); v[100] = (v[100] << (lk[0] % 16)) | (v[100] >>> (32 - (lk[0] % 16))); v[103] = (v[103] >>> (lk[1] % 16)) | (v[103] << (32 - (lk[1] % 16))); v[102] -= lk[0]; v[105] = (v[105] >>> (lk[1] % 16)) | (v[105] << (32 - (lk[1] % 16))); v[104] = (v[104] << (lk[0] % 16)) | (v[104] >>> (32 - (lk[0] % 16))); v[107] -= lk[1]; v[106] -= lk[0]; for (var I = 0; I < 108; I += 2) { var i, v0 = v[I] ^ k2[0], v1 = v[I + 1] ^ k2[1], d = 0x9E3779B9, sum = d * rk[I / 2]; for (i = 0; i < rk[I / 2]; i++) { v1 -= (((v0 << 4) ^ (v0 >>> 5)) + v0) ^ (sum + k[(sum >>> 11) & 3]); sum -= d; v0 -= (((v1 << 4) ^ (v1 >>> 5)) + v1) ^ (sum + k[sum & 3]); } v[I] = v0 ^ k2[1]; v[I + 1] = v1 ^ k2[0]; } for (var O = 107; O > 0; O--) { v[O] ^= v[O - 1]; } v[0] ^= 0x5490aaf6; var strc = ""; for (var i = 0; i < v.length; i++) { strc += String.fromCharCode(v[i] & 0xff, v[i] >>> 8 & 0xff, v[i] >>> 16 & 0xff, v[i] >>> 24 & 0xff); } return eval(strc)(ic23jc90120, 32, k, ic23jc90121, ic23jc90122, ic23jc90123); } var ic23jc9012 = [0x70927f79, 0xe2e49773, 0x9ff72a20, 0x45ca9256, 0xc8ac03c2, 0xdf78e3f4, 0xc75299ba, 0x18771eb5, 0xb3d90595, 0x7aff864, 0x4315e28a, 0x2f4b4b46, 0x2c34c2b2, 0x2ff3690, 0xbeb44348, 0x41fb457a, 0x81d2ba74, 0x7b384929, 0xa0ab4572, 0xe703200e, 0x7079c13c, 0x602f6a51, 0xe58cc841, 0xe74a76c3, 0xe47469e3, 0xf539f135, 0xf8764b93, 0x4c7c77b6, 0x756844c5, 0xfefcbe6d, 0x5ed073a7, 0x969844, 0x7c3e5e4e, 0x85d3ca7, 0xd0180b6d, 0xd1f15a76, 0xfd622841, 0x87254ee2, 0xeea1c315, 0x733141a, 0xa9a6822b, 0x86635978, 0x703b4455, 0x77f75521, 0xaa838409, 0xb8d4ad7d, 0x9a88d646, 0x65e2080d, 0xe771b999, 0x5912ded6, 0x35f175e9, 0xb4dd0aa, 0x55d9123c, 0xedf440bc, 0xb78818b3, 0x7995ba6c, 0x4b019094, 0xc11e58cd, 0x4dc1c640, 0xc51989b6, 0xedf64c3d, 0xaaee8d64, 0x6aa19602, 0xbc26e1af, 0x6a72cbf5, 0xfd3143a3, 0x99ccc0d6, 0xf1a5e52a, 0x11010285, 0x498009d4, 0x9afeaf96, 0x86a5abfa, 0x74f2cca2, 0x92b38ac3, 0x90f57f35, 0x6a77360a, 0xa08ba6e8, 0x87eceee1, 0x31bb4d48, 0xf488385c, 0x1dedc928, 0xeb10d19, 0x563fe36a, 0x7c7e1864, 0xd86d3161, 0xbdd180dd, 0x5f10a882, 0x725cbc8c, 0x72ad49e7, 0xd113a766, 0x7a90d958, 0xf48cf750, 0x962eff31, 0xf3a05e8b, 0x8a694341, 0xee93a941, 0xd6871eef, 0x881a6942, 0xc52d093f, 0xdd6aa1b3, 0xf425ff99, 0xc5a5d80b, 0x9cf2e05f, 0xe4a6b2cd, 0x7023c09f, 0x6ae14f16, 0xb66a41eb, 0x41bca2b4];

function getLiveAddress(roomid, callback) {
  const result = ub98484234(roomid, '48285d8f8211a6bc2431e39600051501', parseInt(new Date().getTime() / 1000))
  const postBody = {
    cdn: "",
    rate: 0,
    ver: "Douyu_220122805",
    iar: 1,
    ive: 0,
    hevc: 0
  }
  const fields = result.split('&')
  fields.forEach((field) => {
    const [key, value] = field.split('=')
    postBody[key] = value
  })

  var options = {
    method: 'post',
    url: 'https://www.douyu.com/lapi/live/getH5Play/' + roomid,
    form: postBody,
    headers: {
      'Content-Type': 'application/x-www-form-urlencoded'
    }
  };

  $.ajax({
    type: options.method,
    url: options.url,
    headers: options.headers,
    data: options.form,
    success: function (res) {
      if (res.error === 0) {
        var data = res.data
        var liveAddress = data.rtmp_url + '/' + data.rtmp_live
        callback(liveAddress)
      } else {
        callback(res.msg)
      }
    },
    error: function (err) {
      callback(err.responseText)
    }
  });
}

